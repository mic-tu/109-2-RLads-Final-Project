"教授兼主任"="教授",
"教授兼主任秘書"="教授",
"客坐教師"="客座教師",
"美國加州大學戴維斯校區比較病理學博士"="兼任教授",
"美國伊利諾大學香檳分校博士"="教授",
"名譽及兼任教授"="名譽教授",
"名譽教授"="名譽教授",
"實務老師"="實務教師",
"所長兼教授"="教授",
"特聘講座"="特聘講座教授",
"特聘教授"="特聘教授",
"特聘教授兼所長"="特聘教授",
"特聘研究講座教授"="特聘講座教授",
"系主任"="教授",
"系主任兼教授"="教授",
"正教授"="教授",
"支援教師"="教師",
"職特聘教授"="特聘教授",
"終身特聘教授"="終身特聘教授",
"終身職特聘教授"="終身特聘教授",
"助理教授；榮譽研究員"="助理教授",
"專任教授、所長"="教授",
"專任教授兼系主任"="教授",
"專任助理教授"="助理教授",
"專業技術教師"="教師")
output <- str_trim(output, side="both")
return(output)
}
# 4. 學院
get_department <- function(col) {
if_else(col %in% c("翻譯碩士學位學程", "華語教學碩士學位學程", "人類學系", "日本語文學系", "臺灣文學研究所", "圖書資訊學系", "外國語文學系", "戲劇學系", "藝術史研究所", "音樂學研究所", "語言學研究所", "哲學系", "中國文學系", "歷史學系"), "文學院",
if_else(col %in% c("大氣科學系", "地理環境資源學系", "地質科學系", "海洋研究所", "化學系", "氣候變遷與永續發展國際學位學程", "數學系", "天文物理研究所", "物理學系", "心理學系", "應用數學科學研究所", "應用物理研究所"), "理學院",
if_else(col %in% c("公共事務研究所", "國家發展研究所", "經濟學系", "社會工作學系", "社會學系", "新聞研究所", "政治學系"), "社會科學院",
if_else(col %in% c("病理學研究所", "毒理學研究所", "法醫學研究所", "分子醫學研究所", "護理學系", "基因體暨蛋白體醫學研究所", "解剖學暨細胞生物學研究所", "口腔生物科學研究所", "臨床牙醫學研究所", "臨床藥學研究所", "臨床醫學研究所", "免疫學研究所", "腦與心智科學研究所", "生理學研究所", "生物化學暨分子生物學研究所", "獸醫學系", "微生物學研究所", "物理治療學系", "牙醫學系", "牙醫專業學院", "藥理學研究所", "藥學系", "藥學專業學院", "醫療器材與醫學影像研究所", "醫學工程研究所", "醫學檢驗暨生物技術學系", "醫學教育暨生醫倫理研究所", "醫學系", "職能治療學系", "腫瘤醫學研究所"), "醫學院",
if_else(col %in% c("材料科學與工程學系", "高分子科學與工程學研究所", "工程科學及海洋工程學系", "工業工程學研究所", "化學工程學系", "環境工程學研究所", "機械工程學系", "建築與城鄉研究所", "土木工程學系", "應用力學研究所"), "工學院",
if_else(col %in% c("動物科學技術學系", "分子暨比較病理生物學研究所", "昆蟲學系", "臨床動物醫學研究所", "農業化學系", "農業經濟學系", "農藝學系", "森林環境暨資源學系", "生物產業傳播暨發展學系", "生物環境系統工程學系", "生物機電工程學系", "食品科技研究所", "園藝暨景觀學系", "植物病理與微生物學系"), "生農學院",
if_else(col %in% c("財務金融學系", "工商管理學系暨商學研究所", "國際企業學系", "會計學系", "資訊管理學系"), "管理學院",
if_else(col %in% c("公共衛生碩士學位學程", "公共衛生學系", "環境衛生研究所", "健康行為與社區科學研究所", "健康政策與管理研究所", "流行病學與預防醫學研究所", "食品安全與健康研究所", "職業醫學與工業衛生研究所"), "公衛學院",
if_else(col %in% c("電機工程學系", "電信工程學研究所", "電子工程學研究所", "光電工程學研究所", "生醫電子與資訊學研究所", "資訊工程學系", "資訊網路與多媒體研究所"), "電資學院",
if_else(col %in% c("法律學系", "科際整合法律學研究所"), "法律學院",
if_else(col %in% c("分子與細胞生物學研究所", "基因體與系統生物學學位學程", "生化科技學系", "生化科學研究所", "生命科學系", "生態學與演化生物學研究所", "漁業科學研究所", "植物科學研究所"), "生命科學院",
if_else(col %in% c("共同教育中心"), "共同教育中心",
if_else(col %in% c("跨領域整合與創新在職專班", "領導學程"), "其他", col)
)
)
)
)
)
)
)
)
)
)
)
)
}
data <- raw_data %>%
distinct(姓名, .keep_all = TRUE) %>%  # 5. 其他：姓名重複出現、無姓名
filter(!is.na(姓名)) %>%
mutate(調整後平均成績=score_converter(平均成績),
授課系所=major_converter(授課系所),
職稱=position_converter(職稱),
學院=get_department(授課系所))
show_clean_data <- kable(data[1:3, c(1:13, 15:16)], align="ccccccccccccccc") %>%
kable_styling(bootstrap_options = c("striped", "hover"))
show_clean_data
theme_update(text = element_text(family='STHeiti'),
panel.background = element_rect(fill = NA),
plot.title = element_text(hjust = 0.5, color = "#03045e", face = "bold", size = 24),
axis.title = element_text(color = "#03045e", size = 20),
axis.text = element_text(color = "#03045e", size = 18),
)
by_department <- data %>%
filter(!is.na(私心推薦), !is.na(學到東西), !is.na(口條好), !is.na(課業壓力), !is.na(給分甜度)) %>%
filter(!is.na(學院))
department <- c("文學院", "理學院", "社會科學院", "醫學院", "工學院",
"生農學院", "管理學院", "公衛學院", "電資學院", "法律學院",
"生命科學院", "共同教育中心", "其他")
department_average <- by_department %>%
group_by(學院) %>%
summarize(教授資料數 = n(),
平均私心推薦 = round(mean(私心推薦), 2),
平均學到東西 = round(mean(學到東西), 2),
平均口條好 = round(mean(口條好), 2),
平均課業壓力 = round(mean(課業壓力), 2),
平均給分甜度 = round(mean(給分甜度), 2)) %>%
arrange(sapply(學院, function(y) which(y == department)))
depart_score_analysis <- kable(department_average, align = 'cccccc') %>%
kable_styling(bootstrap_options = c("striped", "hover")) %>%
column_spec(1, bold = T)
depart_score_analysis
scores <- data %>%
select(私心推薦, 學到東西, 口條好, 課業壓力, 給分甜度)
scores %>%
pairs.panels(lm = T, smooth = F, ellipses = F, rug = F, hist.col = "#00b4d8", cex.labels=3, cex.axis=2)
regression_result <- lm(私心推薦 ~ 學到東西 + 口條好 + 課業壓力 + 給分甜度, data = data)
regression_result
parameters <- summary(regression_result)$coefficients[1:5]
score <- data %>%
mutate(預估私心推薦 = parameters[1] + parameters[2] * 學到東西 + parameters[3] * 口條好 + parameters[4] * 課業壓力 + parameters[5] * 給分甜度) %>%
select(私心推薦, 預估私心推薦) %>%
filter(!is.na(私心推薦), !is.na(預估私心推薦))
predict_result <- ggplot(score, aes(x = 私心推薦, y = 預估私心推薦)) +
geom_point(color = "#90e0ef", position = "jitter") +
geom_abline(intercept = 0, slope = 1, color = "#90e0ef")
predict_result
#以私心推薦分數為x軸繪製直方圖，觀察有綽號的教授在各分數的佔比
nickname <- c(1:3150)
for (x in seq_along(data$綽號)){
if (is.na(data$綽號[x])) {nickname[x] <- "沒有綽號"}
if (!is.na(data$綽號[x])) {nickname[x] <- "有綽號"}
}
ggplot(data = data) +
geom_bar(aes(x = 私心推薦, fill = nickname))
#進一步將沒有綽號的教授過濾掉，觀察有綽號的教授的得分表現，繪製圓餅圖
named <-nickname[nickname == "有綽號"]
ranking <- as.character(named_data$私心推薦)
comment <- data %>%
filter(!is.na(評論)) %>%
select(姓名, 評論)
# 取得形容詞的函數
get_adj = function(x){
stopifnot(inherits(x,"character"))
index = names(x) %in% c("a","ag","ad","an")
x[index]
}
# 對每個教授的評論斷詞的函數
get_segged_text <- function(x){
seg <- worker("tag") # 設定斷詞器
comment_segged <- rep("", length(x$評論))
for (i in seq_along(x$評論)) {
# Segment each element in docs
segged <- segment(x$評論[i], seg)
segged <- get_adj(segged)
# Collapse the character vector into a string, separated by space
comment_segged[i] <- paste0(segged, collapse = " ")
}
# 將每個評論的斷詞串起來
comment_df <- tibble::tibble(
comment_id = seq_along(comment_segged),
content = comment_segged)
knitr::kable(comment_df, align = "c")
# 將每個評論的斷詞串起來
tidy_text_format <- comment_df %>%
unnest_tokens(output = "word", input = "content",
token = "regex", pattern = " ")
# 抓出前 30 個最常出現的形容詞
text_final <- tidy_text_format %>%
group_by(word) %>%
summarise(n = n()) %>%
filter(str_length(word) > 1) %>%
arrange(desc(n)) %>%
top_n(30)
return(text_final)
}
total_text <- get_segged_text(comment)
important_personality <- highchart() %>%
hc_chart(type = "bar") %>%
hc_xAxis(categories = total_text$word) %>%
hc_add_series(name = "出現次數",
data = total_text$n) %>%
hc_title(text = "評論中最常出現的詞彙 Top 30")
important_personality
#列出辨識出本土學歷的關鍵字，由於部分學校的名稱可能誤將某些外國學校篩掉，關鍵字並未包含所有學校名稱
type <- c(1:3150)
TW <- list("臺","台","清",c("交","通"),c("成","功"),c("師","範"),c("中","興"),c("中","央"),c("中","山"),c("海","洋"),c("中","正"),c("高","雄"), c("彰","化"),c("陽","明"),c("嘉","義"),c("東","華"),c("雲","林"),c("屏","東"),c("宜","蘭"),c("虎","尾"),c("澎","湖"),c("勤","益"),c("金","門"),c("輔","仁"),c("淡","江"),c("逢","甲"),c("慈","濟")
)
#使用上述關鍵字list歸類出是否是否為本土學歷
for (x in seq_along(data$最高學歷)){
w <- strsplit(data$最高學歷[x],"")
check <- w[[1]]
for ( y in seq_along(TW)){
if (TW[[y]] %in% check) {type[x] <- "本土學歷"}
}
if (type[x] != "本土學歷") {type[x] <- data$最高學歷[x]}
}
type[type != "本土學歷"] <- "外國學歷"
data_with_type <- data %>%
mutate ("是否為本土" = type) %>%
filter(!is.na(是否為本土))
#圖表一：由於外國學歷項目遠大於本土學歷，因此無法頹測結論
ggplot(data = data_with_type) +
geom_bar(aes(x = 私心推薦, fill = 是否為本土))
#圖表二：不論是擁有本土學歷還是外國學歷的教授，私心推薦分數獲得5分者皆為最多
ggplot(data = data_with_type) +
geom_bar(aes(x = 是否為本土, fill = as.character(data_with_type$私心推薦)))
knitr::opts_chunk$set(echo = TRUE, out.width="50%", fig.width=12, fig.height=8)
comment <- data %>%
filter(!is.na(評論)) %>%
select(姓名, 評論)
knitr::opts_chunk$set(echo = TRUE, out.width="50%", fig.width=12, fig.height=8)
library(readxl)
library(tidyverse)
library(showtext)
library(psych)
library(jiebaR)
library(highcharter)
library(tidytext)
library(knitr)
library(kableExtra)
# 設定字體
showtext_auto(enable = TRUE)
font_add("STHeiti", "STHeiti Medium.ttc")
raw_data <- read_excel('UrSchool教授資料.xlsx')
show_raw_data <- kable(raw_data[1:3, 1:13], align="ccccccccccccc") %>%
kable_styling(bootstrap_options = c("striped", "hover"))
show_raw_data
# 資料前處理
# 1. 將平均成績的等第換成分數
score_converter <- function(col) {
output <- recode(col,
"A+"=95, "A"=87, "A-"=82,
"B+"=78, "B"=75, "B-"=70,
"C+"=68, "C"=65, "C-"=60, "F"=50)
return(output)
}
# 2. 授課系所統一：一個系所有太多重複名稱，故統一之
major_converter <- function(col) {
output <- recode(col,
"教授"="財務金融學系",
"電機系"="電機工程學系",
"電子所"="電子工程學研究所",
"法律系"="法律學系",
"共教中心"="共同教育中心",
"歷史系"="歷史學系",
"社會所"="社會學系",
"生物產業機電工程學系"="生物機電工程學系",
"文學院"="日本語文學系")
return(output)
}
# 3. 職稱統一：把兼職都去掉
position_converter <- function(col) {
output <- recode(col,
"副教授級專業技術人員"="副教授",
"副教授兼副系主任"="副教授",
"副教授兼任所長"="副教授",
"副教授兼所長"="副教授",
"副教授兼系主任"="副教授",
"副教授兼主任"="副教授兼主任",
"副主任"="教授",
"合聘副教授"="副教授",
"合聘兼任教授"="兼任教授",
"合聘講師"="講師",
"合聘教師"="教師",
"合聘教授"="教授",
"合聘教授"="教授",
"合聘助理教授"="助理教授",
"合授教師"="教師",
"兼任教授"="兼任教授",
"兼任教授兼文大校長"="兼任教授",
"兼任老師"="兼任實務教師",
"兼任語言教師"="兼任實務教師",
"教授"="教授",
"教授兼本所所長"="教授",
"教授兼副教務長"="教授",
"教授兼副所長"="教授",
"教授兼副系主任"="教授",
"教授兼副主任"="教授",
"教授兼科主任及研究所所長"="教授",
"教授兼任代理所長"="教授",
"教授兼任所長"="教授",
"教授兼任系主任"="教授",
"教授兼任院長"="教授",
"教授兼生農學院副院長"="教授",
"教授兼所長"="教授",
"教授兼網媒所所長"="教授",
"教授兼系主任"="教授",
"教授兼系主任兼所長"="教授",
"教授兼藝文中心主任"="教授",
"教授兼院長"="教授",
"教授兼主任"="教授",
"教授兼主任秘書"="教授",
"客坐教師"="客座教師",
"美國加州大學戴維斯校區比較病理學博士"="兼任教授",
"美國伊利諾大學香檳分校博士"="教授",
"名譽及兼任教授"="名譽教授",
"名譽教授"="名譽教授",
"實務老師"="實務教師",
"所長兼教授"="教授",
"特聘講座"="特聘講座教授",
"特聘教授"="特聘教授",
"特聘教授兼所長"="特聘教授",
"特聘研究講座教授"="特聘講座教授",
"系主任"="教授",
"系主任兼教授"="教授",
"正教授"="教授",
"支援教師"="教師",
"職特聘教授"="特聘教授",
"終身特聘教授"="終身特聘教授",
"終身職特聘教授"="終身特聘教授",
"助理教授；榮譽研究員"="助理教授",
"專任教授、所長"="教授",
"專任教授兼系主任"="教授",
"專任助理教授"="助理教授",
"專業技術教師"="教師")
output <- str_trim(output, side="both")
return(output)
}
# 4. 學院
get_department <- function(col) {
if_else(col %in% c("翻譯碩士學位學程", "華語教學碩士學位學程", "人類學系", "日本語文學系", "臺灣文學研究所", "圖書資訊學系", "外國語文學系", "戲劇學系", "藝術史研究所", "音樂學研究所", "語言學研究所", "哲學系", "中國文學系", "歷史學系"), "文學院",
if_else(col %in% c("大氣科學系", "地理環境資源學系", "地質科學系", "海洋研究所", "化學系", "氣候變遷與永續發展國際學位學程", "數學系", "天文物理研究所", "物理學系", "心理學系", "應用數學科學研究所", "應用物理研究所"), "理學院",
if_else(col %in% c("公共事務研究所", "國家發展研究所", "經濟學系", "社會工作學系", "社會學系", "新聞研究所", "政治學系"), "社會科學院",
if_else(col %in% c("病理學研究所", "毒理學研究所", "法醫學研究所", "分子醫學研究所", "護理學系", "基因體暨蛋白體醫學研究所", "解剖學暨細胞生物學研究所", "口腔生物科學研究所", "臨床牙醫學研究所", "臨床藥學研究所", "臨床醫學研究所", "免疫學研究所", "腦與心智科學研究所", "生理學研究所", "生物化學暨分子生物學研究所", "獸醫學系", "微生物學研究所", "物理治療學系", "牙醫學系", "牙醫專業學院", "藥理學研究所", "藥學系", "藥學專業學院", "醫療器材與醫學影像研究所", "醫學工程研究所", "醫學檢驗暨生物技術學系", "醫學教育暨生醫倫理研究所", "醫學系", "職能治療學系", "腫瘤醫學研究所"), "醫學院",
if_else(col %in% c("材料科學與工程學系", "高分子科學與工程學研究所", "工程科學及海洋工程學系", "工業工程學研究所", "化學工程學系", "環境工程學研究所", "機械工程學系", "建築與城鄉研究所", "土木工程學系", "應用力學研究所"), "工學院",
if_else(col %in% c("動物科學技術學系", "分子暨比較病理生物學研究所", "昆蟲學系", "臨床動物醫學研究所", "農業化學系", "農業經濟學系", "農藝學系", "森林環境暨資源學系", "生物產業傳播暨發展學系", "生物環境系統工程學系", "生物機電工程學系", "食品科技研究所", "園藝暨景觀學系", "植物病理與微生物學系"), "生農學院",
if_else(col %in% c("財務金融學系", "工商管理學系暨商學研究所", "國際企業學系", "會計學系", "資訊管理學系"), "管理學院",
if_else(col %in% c("公共衛生碩士學位學程", "公共衛生學系", "環境衛生研究所", "健康行為與社區科學研究所", "健康政策與管理研究所", "流行病學與預防醫學研究所", "食品安全與健康研究所", "職業醫學與工業衛生研究所"), "公衛學院",
if_else(col %in% c("電機工程學系", "電信工程學研究所", "電子工程學研究所", "光電工程學研究所", "生醫電子與資訊學研究所", "資訊工程學系", "資訊網路與多媒體研究所"), "電資學院",
if_else(col %in% c("法律學系", "科際整合法律學研究所"), "法律學院",
if_else(col %in% c("分子與細胞生物學研究所", "基因體與系統生物學學位學程", "生化科技學系", "生化科學研究所", "生命科學系", "生態學與演化生物學研究所", "漁業科學研究所", "植物科學研究所"), "生命科學院",
if_else(col %in% c("共同教育中心"), "共同教育中心",
if_else(col %in% c("跨領域整合與創新在職專班", "領導學程"), "其他", col)
)
)
)
)
)
)
)
)
)
)
)
)
}
data <- raw_data %>%
distinct(姓名, .keep_all = TRUE) %>%  # 5. 其他：姓名重複出現、無姓名
filter(!is.na(姓名)) %>%
mutate(調整後平均成績=score_converter(平均成績),
授課系所=major_converter(授課系所),
職稱=position_converter(職稱),
學院=get_department(授課系所))
show_clean_data <- kable(data[1:3, c(1:13, 15:16)], align="ccccccccccccccc") %>%
kable_styling(bootstrap_options = c("striped", "hover"))
theme_update(text = element_text(family='STHeiti'),
panel.background = element_rect(fill = NA),
plot.title = element_text(hjust = 0.5, color = "#03045e", face = "bold", size = 24),
axis.title = element_text(color = "#03045e", size = 20),
axis.text = element_text(color = "#03045e", size = 18),
)
by_department <- data %>%
filter(!is.na(私心推薦), !is.na(學到東西), !is.na(口條好), !is.na(課業壓力), !is.na(給分甜度)) %>%
filter(!is.na(學院))
department <- c("文學院", "理學院", "社會科學院", "醫學院", "工學院",
"生農學院", "管理學院", "公衛學院", "電資學院", "法律學院",
"生命科學院", "共同教育中心", "其他")
department_average <- by_department %>%
group_by(學院) %>%
summarize(教授資料數 = n(),
平均私心推薦 = round(mean(私心推薦), 2),
平均學到東西 = round(mean(學到東西), 2),
平均口條好 = round(mean(口條好), 2),
平均課業壓力 = round(mean(課業壓力), 2),
平均給分甜度 = round(mean(給分甜度), 2)) %>%
arrange(sapply(學院, function(y) which(y == department)))
depart_score_analysis <- kable(department_average, align = 'cccccc') %>%
kable_styling(bootstrap_options = c("striped", "hover")) %>%
column_spec(1, bold = T)
comment <- data %>%
filter(!is.na(評論)) %>%
select(姓名, 評論)
# 取得形容詞的函數
get_adj = function(x){
stopifnot(inherits(x,"character"))
index = names(x) %in% c("a","ag","ad","an")
x[index]
}
# 對每個教授的評論斷詞的函數
get_segged_text <- function(x){
seg <- worker("tag") # 設定斷詞器
comment_segged <- rep("", length(x$評論))
for (i in seq_along(x$評論)) {
# Segment each element in docs
segged <- segment(x$評論[i], seg)
segged <- get_adj(segged)
# Collapse the character vector into a string, separated by space
comment_segged[i] <- paste0(segged, collapse = " ")
}
# 將每個評論的斷詞串起來
comment_df <- tibble::tibble(
comment_id = seq_along(comment_segged),
content = comment_segged)
knitr::kable(comment_df, align = "c")
# 將每個評論的斷詞串起來
tidy_text_format <- comment_df %>%
unnest_tokens(output = "word", input = "content",
token = "regex", pattern = " ")
# 抓出前 30 個最常出現的形容詞
text_final <- tidy_text_format %>%
group_by(word) %>%
summarise(n = n()) %>%
filter(str_length(word) > 1) %>%
arrange(desc(n)) %>%
top_n(20)
return(text_final)
}
total_text <- get_segged_text(comment)
important_personality <- highchart() %>%
hc_chart(type = "bar") %>%
hc_xAxis(categories = total_text$word) %>%
hc_add_series(name = "出現次數",
data = total_text$n) %>%
hc_title(text = "評論中最常出現的詞彙 Top 30")
important_personality
usually <- tibble(學院 = seq_along(department),
最常形容 = seq_along(department),
出現次數 = seq_along(department))
for (i in seq_along(department)){
usually$學院[i] = department[i]
usually$最常形容[i] = get_segged_text(data %>%
filter(學院 == department[i]) %>%
select(評論))$word[1]
usually$出現次數[i] = get_segged_text(data %>%
filter(學院 == department[i]) %>%
select(評論))$n[1]
}
important_department <- kable(usually, align = 'ccc') %>%
kable_styling(bootstrap_options = c("striped", "hover")) %>%
column_spec(1, bold = T)
important_department
high_review <- data %>%
filter(!is.na(評論), 私心推薦 == 5) %>%
select(評論)
low_review <- data %>%
filter(!is.na(評論), 私心推薦 <= 3) %>%
select(評論)
high_review_text <- get_segged_text(high_review)
low_review_text <- get_segged_text(low_review)
important_personality_high_score <- highchart() %>%
hc_chart(type = "bar") %>%
hc_xAxis(categories = high_review_text$word) %>%
hc_add_series(name = "出現次數",
data = high_review_text$n) %>%
hc_title(text = "高評價教授詞彙分佈圖評論中最常出現的詞彙 Top 30")
important_personality_low_score <- highchart() %>%
hc_chart(type = "bar") %>%
hc_xAxis(categories = low_review_text$word) %>%
hc_add_series(name = "出現次數",
data = low_review_text$n) %>%
hc_title(text = "低評價教授詞彙分佈圖評論中最常出現的詞彙 Top 30")
important_personality_high_score
important_personality_low_score
high_review <- data %>%
filter(!is.na(評論), 私心推薦 == 5) %>%
select(評論)
low_review <- data %>%
filter(!is.na(評論), 私心推薦 <= 3) %>%
select(評論)
high_review_text <- get_segged_text(high_review)
low_review_text <- get_segged_text(low_review)
important_personality_high_score <- highchart() %>%
hc_chart(type = "bar") %>%
hc_xAxis(categories = high_review_text$word) %>%
hc_add_series(name = "出現次數",
data = high_review_text$n) %>%
hc_title(text = "高評價教授詞彙分佈圖評論中最常出現的詞彙 Top 20")
important_personality_low_score <- highchart() %>%
hc_chart(type = "bar") %>%
hc_xAxis(categories = low_review_text$word) %>%
hc_add_series(name = "出現次數",
data = low_review_text$n) %>%
hc_title(text = "低評價教授詞彙分佈圖評論中最常出現的詞彙 Top 20")
important_personality_high_score
low_review_text
high_review_text
high_review <- data %>%
filter(!is.na(評論), 私心推薦 == 5) %>%
select(評論)
low_review <- data %>%
filter(!is.na(評論), 私心推薦 <= 3) %>%
select(評論)
high_review_text <- get_segged_text(high_review) %>%
top_n(20)
low_review_text <- get_segged_text(low_review) %>%
top_n(20)
important_personality_high_score <- highchart() %>%
hc_chart(type = "bar") %>%
hc_xAxis(categories = high_review_text$word) %>%
hc_add_series(name = "出現次數",
data = high_review_text$n) %>%
hc_title(text = "高評價教授詞彙分佈圖評論中最常出現的詞彙 Top 20")
important_personality_low_score <- highchart() %>%
hc_chart(type = "bar") %>%
hc_xAxis(categories = low_review_text$word) %>%
hc_add_series(name = "出現次數",
data = low_review_text$n) %>%
hc_title(text = "低評價教授詞彙分佈圖評論中最常出現的詞彙 Top 20")
important_personality_high_score
important_personality_low_score
high_review <- data %>%
filter(!is.na(評論), 私心推薦 == 5) %>%
select(評論)
low_review <- data %>%
filter(!is.na(評論), 私心推薦 <= 3) %>%
select(評論)
high_review_text <- get_segged_text(high_review)
low_review_text <- get_segged_text(low_review)
important_personality_high_score <- highchart() %>%
hc_chart(type = "bar") %>%
hc_xAxis(categories = high_review_text$word) %>%
hc_add_series(name = "出現次數",
data = high_review_text$n) %>%
hc_title(text = "高評價教授詞彙分佈圖評論中最常出現的詞彙")
important_personality_low_score <- highchart() %>%
hc_chart(type = "bar") %>%
hc_xAxis(categories = low_review_text$word) %>%
hc_add_series(name = "出現次數",
data = low_review_text$n) %>%
hc_title(text = "低評價教授詞彙分佈圖評論中最常出現的詞彙")
important_personality_high_score
important_personality_low_score
